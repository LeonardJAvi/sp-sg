.wrapper
	.wrapper-body.container
		.actions
			= link_to admin_projects_path, class: "btn-floating btn-flat tooltipped", "data-position" => "bottom", "data-tooltip" => t("keppler.actions.back") do
				= material_icon.md_18.arrow_back.css_class("md-dark")
		.wrapper-inputs
			.card
				.card-content
					= simple_form_for [:admin, @order] do |f|
						.row
							= f.input :name_client
							= f.input :identification_client
							= f.input :phone_client
							= f.input :email_client
							= f.association :project, label: false,  label_method: :name,value_method: :id, include_blank: 'Select Project', input_html: { class: "browser-default",  style:"margin-bottom: 5px;" }
							= f.input :payment_currency
							= f.input :price_project,  input_html: { type: "text" }
							= f.input :date_start_real, as: :string, input_html: {class: "datepicker"}
							= f.input :date_end_real, as: :string, input_html: {class: "datepicker"}
							= f.input :date_start_planned, as: :string, input_html: {class: "datepicker"}
							= f.input :date_end_planned, as: :string, input_html: {class: "datepicker"}
							= f.input :date_pause, as: :string, input_html: {class: "datepicker"}
							-unless ((controller_name == "orders") and (action_name =="new"))
								= f.input :state
							.form-actions.right
								= f.button :submit, t("keppler.actions.save"), name: '_save'
								= f.button :submit, t("keppler.actions.save_and_add_another"), name: '_add_other'

:javascript

			$(document).ready(function() {
				$('.datepicker').pickadate ({
						min: new Date(),
						selectMonths: true,
						yearSelector: false,
						hiddenName: true,
						selectYears: 1,
						editable: false,
						firstDay: 1,
						format: 'dd/mm/yyyy',
						formatSubmit: 'yyyy-mm-dd',
						
				});
		
		// Validacion de fecha comienzo real vs fecha de finalizacion real
		var inicio = $('#order_date_start_real').pickadate(),
		inicio_picker = inicio.pickadate('picker')
		var final = $('#order_date_end_real').pickadate(),
		final_picker = final.pickadate('picker')

		// Check if there’s a “from” or “to” date to start with.
		if (inicio_picker.get('value')) {
		 final_picker.set('min', inicio_picker.get('select'))
		}
		if (final_picker.get('value')) {
		 inicio_picker.set('max', final_picker.get('select'))
		}
		// When something is selected, update the “from” and “to” limits.
		inicio_picker.on('set', function(event) {
		 if (event.select) {
			 final_picker.set('min', inicio_picker.get('select'))
		 } else if ('clear' in event) {
			 final_picker.set('min', false)
		 }
		})
		final_picker.on('set', function(event) {
		 if (event.select) {
			 inicio_picker.set('max', final_picker.get('select'))
		 } else if ('clear' in event) {
			 inicio_picker.set('max', false)
		 }
		})

		}); //document ready



